##be used to check what is inside 确定文件包里包含什么内容
library(sf)
library(here)
st_layers(here("prac3_data", "gadm41_AUS.gpkg"))

##read the layer 读取图层vector
library(sf)
Ausoutline <- st_read(here("prac3_data", "gadm41_AUS.gpkg"), 
                      layer='ADM_ADM_0')

##check the coordinate 检查坐标系
print(Ausoutline)

##the another way to check the coordinate 检查坐标系的另一种方式
library(sf)
st_crs(Ausoutline)$proj4string

##project the coordinate when the vector without coordinate 当没有坐标系时设置坐标系
##way1
Ausoutline <- Ausoutline %>%
  st_set_crs(., 4326)
##way2
Ausoutline <- st_read(here("prac3_data", "gadm41_AUS.gpkg"), 
                      layer='ADM_ADM_0') %>% 
  st_set_crs(4326)
##需要确定坐标系代码

##reprojecting  更改坐标系
AusoutlinePROJECTED <- Ausoutline %>%
  st_transform(.,3112)

print(AusoutlinePROJECTED)

#From sf to sp
AusoutlineSP <- Ausoutline %>%
  as(., "Spatial")
#From sp to sf
AusoutlineSF <- AusoutlineSP %>%
  st_as_sf()


##load raster data 文字形式
library(raster)
library(terra)
jan<-terra::rast(here("prac3_data", "wc2.1_5m_tavg_01.tif"))
# have a look at the raster layer jan
jan

##plot the data 图片形式
plot(jan)

##Mollweide projection
# set the proj 4 to a new object

pr1 <- terra::project(jan, "+proj=moll +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs")
plot(pr1)

##WGS84
pr1 <- pr1 %>%
  terra::project(., "+proj=longlat +datum=WGS84 +no_defs +type=crs")
plot(pr1)


##load data 加载数据表
##用 dir_info()列出目录中存储的所有文件
# look in our folder, find the files that end with .tif and 
library(fs)
dir_info("prac3_data/") 


##从指定的文件夹 prac3_data/ 中筛选出所有以 .tif 结尾的文件路径，并将这些路径提取为一个列表。
library(tidyverse)
listfiles<-dir_info("prac3_data/") %>%
  filter(str_detect(path, ".tif")) %>%
  dplyr::select(path)%>%   ###这里为了避免使用了raster包中的select函数，所以需要专门点明是dplyr包
  pull()  ##same as the $ often used to extract columns as in the next stage the input must be filenames as characters
#have a look at the file names 
listfiles


##load all of the data straight into a SpatRaster 将所有数据直接加载到 SpatRaster 中
worldclimtemp <- listfiles %>%
  terra::rast()
  
#have a look at the raster stack
worldclimtemp


##access single layers
##在堆栈中，您会注意到在 dimensions 下有 12 个层 （nlyr）。
##该堆栈已为我们按顺序加载了 12 个月的平均温度数据。
worldclimtemp[[1]]


##rename the raster data
month <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", 
           "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")

names(worldclimtemp) <- month
##rename() is unavaliable for raster data
##重命名后提取特定月份数据
worldclimtemp$Jan


##导入数据
site <- c("Brisbane", "Melbourne", "Perth", "Sydney", "Broome", "Darwin", "Orange", 
          "Bunbury", "Cairns", "Adelaide", "Gold Coast", "Canberra", "Newcastle", 
          "Wollongong", "Logan City" )
lon <- c(153.03, 144.96, 115.86, 151.21, 122.23, 130.84, 149.10, 115.64, 145.77, 
         138.6, 153.43, 149.13, 151.78, 150.89, 153.12)
lat <- c(-27.47, -37.91, -31.95, -33.87, 17.96, -12.46, -33.28, -33.33, -16.92, 
         -34.93, -28, -35.28, -32.93, -34.42, -27.64)
#Put all of this inforamtion into one list 
samples <- data.frame(site, lon, lat, row.names="site")
# Extract the data from the Rasterstack for all points 
AUcitytemp<- terra::extract(worldclimtemp, samples)


##从 AUcitytemp 中提取的栅格数据转化为一个 tibble（类似数据框的表格形式），
##并将 site（城市名称）作为新列添加到这个表格中，插入到 "Jan" 列之前。
Aucitytemp2 <- AUcitytemp %>% 
  as_tibble()%>% 
  add_column(Site = site, .before = "Jan")


##在原有大数据包中提取特定城市的数据 提取Perth
Perthtemp <- Aucitytemp2 %>%
  filter(site=="Perth")
##提取行数据
Perthtemp <- Aucitytemp2[3,]

##制作直方图需要numeric数据，将double数据转换为numeric数据并制作直方图
hist(as.numeric(Perthtemp))


##美化直方图
library(tidyverse)
#define where you want the breaks in the historgram
userbreak<-c(8,10,12,14,16,18,20,22,24,26)

# remove the ID and site columns
Perthtemp <- Aucitytemp2 %>%
  filter(site=="Perth")

t<-Perthtemp %>%
 dplyr::select(Jan:Dec)

  hist((as.numeric(t)), 
     breaks=userbreak, 
     col="red", 
     main="Histogram of Perth Temperature", 
     xlab="Temperature", 
     ylab="Frequency")


##将变量 t 转换为数值型向量，并生成一个直方图 同时储存了直方图的相关信息
histinfo <- as.numeric(t) %>%
  as.numeric()%>%
  hist(.)
histinfo  ##显示直方图




